/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ExcelVoteRow,
  UrlRequest,
} from '../models/index';
import {
    ExcelVoteRowFromJSON,
    ExcelVoteRowToJSON,
    UrlRequestFromJSON,
    UrlRequestToJSON,
} from '../models/index';

export interface ProcessFromUrlRequest {
    urlRequest: UrlRequest;
}

/**
 * 
 */
export class VoteControllerApi extends runtime.BaseAPI {

    /**
     */
    async processFromUrlRaw(requestParameters: ProcessFromUrlRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<{ [key: string]: ExcelVoteRow; }>> {
        if (requestParameters.urlRequest === null || requestParameters.urlRequest === undefined) {
            throw new runtime.RequiredError('urlRequest','Required parameter requestParameters.urlRequest was null or undefined when calling processFromUrl.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer Authentication", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/votes/excel/url`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UrlRequestToJSON(requestParameters.urlRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => runtime.mapValues(jsonValue, ExcelVoteRowFromJSON));
    }

    /**
     */
    async processFromUrl(requestParameters: ProcessFromUrlRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<{ [key: string]: ExcelVoteRow; }> {
        const response = await this.processFromUrlRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
